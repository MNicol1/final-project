{"version":3,"file":"static/js/105.cf48f7ee.chunk.js","mappings":"iKAIMA,EAAiB,WACrB,IAAMC,GAAUC,EAAAA,EAAAA,WAIhBC,EAAAA,EAAAA,IAAS,WAEPF,EAAQG,QAAQC,SAASC,GAJA,QAe3B,OACEC,EAAAA,EAAAA,MAAA,QACEC,cAVkB,SAACC,GACrBC,SAASC,KAAKC,MAAMC,OAAS,WAU3BC,aAPiB,SAACL,GACpBC,SAASC,KAAKC,MAAMC,OAAS,WAO3BE,IAAKd,EACLe,SAAU,CAAC,EAAG,EAAG,GAAGC,SAAA,EAEpBC,EAAAA,EAAAA,KAAA,kBACEC,KAAM,CACJ,IACA,GACA,GACA,EACU,EAAVC,KAAKC,GACL,EACAD,KAAKC,OAGTH,EAAAA,EAAAA,KAAA,wBAAsBI,MAAO,QAASC,WAAS,QAwBrD,UAnBwB,WAKtB,OACEhB,EAAAA,EAAAA,MAACiB,EAAAA,GAAM,CAAAP,SAAA,EACLC,EAAAA,EAAAA,KAAA,oBACEF,SAAU,CAAC,EAAG,EAAG,GACjBS,UAAW,EACXC,YAAU,EACVC,eAAa,KAEfT,EAAAA,EAAAA,KAAClB,EAAc,KAXV,gBAAgB4B,KAAKC,UAAUC,aAYpBZ,EAAAA,EAAAA,KAACa,EAAAA,EAAa","sources":["components/SphereComponent.js"],"sourcesContent":["import { useRef, useState, useCallback, useEffect } from \"react\";\r\nimport { Canvas, useFrame } from \"@react-three/fiber\";\r\nimport { OrbitControls } from \"@react-three/drei\";\r\n\r\nconst AnimatedSphere = () => {\r\n  const meshRef = useRef();\r\n\r\n  const baseRotationSpeedY = 0.002;\r\n\r\n  useFrame(() => {\r\n    // Rotate the sphere continuously\r\n    meshRef.current.rotation.y += baseRotationSpeedY;\r\n  });\r\n\r\n  const onPointerOver = (event) => {\r\n    document.body.style.cursor = \"pointer\";\r\n  };\r\n\r\n  const onPointerOut = (event) => {\r\n    document.body.style.cursor = \"default\";\r\n  };\r\n\r\n  return (\r\n    <mesh\r\n      onPointerOver={onPointerOver}\r\n      onPointerOut={onPointerOut}\r\n      ref={meshRef}\r\n      position={[0, 0, 0]}\r\n    >\r\n      <sphereGeometry\r\n        args={[\r\n          3.5, // radius\r\n          32, // widthSegments\r\n          12, // heightSegments\r\n          0, // phiStart\r\n          Math.PI * 2, // phiLength\r\n          3, // thetaStart\r\n          Math.PI, // thetaLength\r\n        ]}\r\n      />\r\n      <meshStandardMaterial color={\"white\"} wireframe />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nconst SphereComponent = () => {\r\n  const isMobile = () => {\r\n    return /Mobi|Android/i.test(navigator.userAgent);\r\n  };\r\n\r\n  return (\r\n    <Canvas>\r\n      <directionalLight\r\n        position={[5, 2, 2]}\r\n        intensity={1}\r\n        castShadow\r\n        receiveShadow\r\n      />\r\n      <AnimatedSphere />\r\n      {!isMobile() && <OrbitControls />}\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default SphereComponent;\r\n"],"names":["AnimatedSphere","meshRef","useRef","useFrame","current","rotation","y","_jsxs","onPointerOver","event","document","body","style","cursor","onPointerOut","ref","position","children","_jsx","args","Math","PI","color","wireframe","Canvas","intensity","castShadow","receiveShadow","test","navigator","userAgent","OrbitControls"],"sourceRoot":""}